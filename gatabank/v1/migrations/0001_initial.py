# Generated by Django 2.2 on 2020-10-18 07:35

import datetime
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
import v1.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/image/banks')),
                ('minLoanAmount', models.IntegerField(blank=True, null=True)),
                ('maxLoanAmount', models.IntegerField(blank=True, null=True)),
                ('interestPercentage', models.IntegerField(blank=True, null=True)),
                ('interestType', models.CharField(blank=True, max_length=512, null=True)),
                ('minIncome', models.IntegerField(blank=True, null=True)),
                ('minLoanTerm', models.CharField(blank=True, max_length=512, null=True)),
                ('maxLoanTerm', models.CharField(blank=True, max_length=512, null=True)),
                ('verifiedIn', models.CharField(blank=True, max_length=512, null=True)),
                ('interestCalMethod', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'banks',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('sponsor', models.CharField(blank=True, max_length=512, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=512, null=True)),
                ('rating', models.FloatField(null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/image/cards')),
            ],
            options={
                'db_table': 'cards',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('name', models.CharField(blank=True, max_length=300)),
                ('type', models.CharField(blank=True, max_length=300)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('name', models.CharField(blank=True, max_length=300)),
                ('type', models.CharField(blank=True, max_length=300)),
                ('city', models.ForeignKey(db_column='city_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='v1.City')),
            ],
            options={
                'db_table': 'districts',
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('name', models.CharField(blank=True, max_length=300)),
                ('type', models.CharField(blank=True, max_length=300)),
                ('district', models.ForeignKey(db_column='district_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='v1.District')),
            ],
            options={
                'db_table': 'villages',
            },
        ),
        migrations.CreateModel(
            name='CardRequirement',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('age', models.IntegerField(null=True)),
                ('personalIdentifier', models.CharField(blank=True, max_length=512, null=True)),
                ('incomeRequirement', models.IntegerField(null=True)),
                ('homeIdentifier', models.CharField(blank=True, max_length=512, null=True)),
                ('card', models.ForeignKey(db_column='card_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_requirement_set', to='v1.Card')),
            ],
            options={
                'db_table': 'card_requirements',
            },
        ),
        migrations.CreateModel(
            name='CardFee',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('cashAdvance', models.CharField(blank=True, max_length=512, null=True)),
                ('latePayment', models.CharField(blank=True, max_length=512, null=True)),
                ('foreignTransaction', models.CharField(blank=True, max_length=512, null=True)),
                ('card', models.ForeignKey(db_column='card_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_fee_set', to='v1.Card')),
            ],
            options={
                'db_table': 'card_fees',
            },
        ),
        migrations.CreateModel(
            name='CardDiscount',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('label', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('card', models.ForeignKey(db_column='card_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_discount_set', to='v1.Card')),
            ],
            options={
                'db_table': 'card_discounts',
            },
        ),
        migrations.CreateModel(
            name='CardBenefit',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('label', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('card', models.ForeignKey(db_column='card_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_benefit_set', to='v1.Card')),
            ],
            options={
                'db_table': 'card_benefits',
            },
        ),
        migrations.CreateModel(
            name='CardBasic',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('freeAirportLounge', models.IntegerField(null=True)),
                ('yearlyFee', models.IntegerField(null=True)),
                ('averageRefund', models.IntegerField(null=True)),
                ('maxRefund', models.IntegerField(null=True)),
                ('cardOrg', models.CharField(blank=True, max_length=512, null=True)),
                ('interest', models.IntegerField(null=True)),
                ('issueFee', models.IntegerField(null=True)),
                ('interestFreeDay', models.IntegerField(null=True)),
                ('paymentEachMonth', models.IntegerField(null=True)),
                ('card', models.ForeignKey(db_column='card_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_basic_set', to='v1.Card')),
            ],
            options={
                'db_table': 'card_basics',
            },
        ),
        migrations.CreateModel(
            name='BankRequirement',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('age', models.CharField(blank=True, max_length=512, null=True)),
                ('personalIdentifier', models.CharField(blank=True, max_length=512, null=True)),
                ('incomeIdentifier', models.CharField(blank=True, max_length=512, null=True)),
                ('homeIdentifier', models.CharField(blank=True, max_length=512, null=True)),
                ('other', models.CharField(blank=True, max_length=512, null=True)),
                ('bank', models.ForeignKey(db_column='bank_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_requirement_set', to='v1.Bank')),
            ],
            options={
                'db_table': 'bank_requirements',
            },
        ),
        migrations.CreateModel(
            name='BankFee',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('penaltyFee', models.CharField(blank=True, max_length=512, null=True)),
                ('penaltyInterest', models.CharField(blank=True, max_length=512, null=True)),
                ('earlierPaymentFee', models.CharField(blank=True, max_length=512, null=True)),
                ('bank', models.ForeignKey(db_column='bank_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_fee_set', to='v1.Bank')),
            ],
            options={
                'db_table': 'bank_fees',
            },
        ),
        migrations.CreateModel(
            name='BankDiscount',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('label', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('bank', models.ForeignKey(db_column='bank_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_discount_set', to='v1.Bank')),
            ],
            options={
                'db_table': 'bank_discounts',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='updated_at')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=300)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('date_of_birth', models.DateField(null=True, verbose_name='date_of_birth')),
                ('last_login', models.DateTimeField(null=True, verbose_name='last_login')),
                ('is_staff', models.BooleanField(default=False)),
                ('city', models.ForeignKey(db_column='city_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='v1.City')),
                ('district', models.ForeignKey(db_column='district_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='v1.District')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('village', models.ForeignKey(db_column='village_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='v1.Village')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', v1.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('v1.user',),
            managers=[
                ('objects', v1.models.UserManager()),
            ],
        ),
    ]
